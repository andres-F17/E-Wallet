import React, { useState } from 'react'
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Wallet, CreditCard, Phone, Zap, User, DollarSign, Calendar } from 'lucide-react'

type Client = {
  id: string
  name: string
  email: string
  balance: number
}

type Transaction = {
  id: string
  date: string
  amount: number
  type: 'deposit' | 'withdrawal' | 'payment'
  description: string
}

type Service = 'mobile' | 'electricity' | 'water' | 'internet'

const mockClients: Client[] = [
  { id: '1', name: 'John Doe', email: 'john@example.com', balance: 500 },
  { id: '2', name: 'Jane Smith', email: 'jane@example.com', balance: 750 },
]

const mockTransactions: Transaction[] = [
  { id: '1', date: '2023-06-01', amount: 100, type: 'deposit', description: 'Salary' },
  { id: '2', date: '2023-06-02', amount: 50, type: 'withdrawal', description: 'ATM' },
  { id: '3', date: '2023-06-03', amount: 30, type: 'payment', description: 'Mobile bill' },
]

const ClientManagement: React.FC = () => {
  return (
    <Card className="shadow-lg">
      <CardHeader className="bg-primary/5">
        <CardTitle className="text-primary flex items-center">
          <User className="mr-2" />
          Client Management
        </CardTitle>
        <CardDescription>Manage your clients and their balances</CardDescription>
      </CardHeader>
      <CardContent className="p-0">
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>Name</TableHead>
              <TableHead>Email</TableHead>
              <TableHead>Balance</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {mockClients.map((client) => (
              <TableRow key={client.id}>
                <TableCell>{client.name}</TableCell>
                <TableCell>{client.email}</TableCell>
                <TableCell>${client.balance.toFixed(2)}</TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </CardContent>
    </Card>
  )
}

const TransactionHistory: React.FC = () => {
  return (
    <Card className="shadow-lg">
      <CardHeader className="bg-primary/5">
        <CardTitle className="text-primary flex items-center">
          <Calendar className="mr-2" />
          Transaction History
        </CardTitle>
        <CardDescription>View your recent transactions</CardDescription>
      </CardHeader>
      <CardContent className="p-0">
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>Date</TableHead>
              <TableHead>Amount</TableHead>
              <TableHead>Type</TableHead>
              <TableHead>Description</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {mockTransactions.map((transaction) => (
              <TableRow key={transaction.id}>
                <TableCell>{transaction.date}</TableCell>
                <TableCell className={transaction.type === 'deposit' ? 'text-green-600' : 'text-red-600'}>
                  ${transaction.amount.toFixed(2)}
                </TableCell>
                <TableCell>{transaction.type}</TableCell>
                <TableCell>{transaction.description}</TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </CardContent>
    </Card>
  )
}

const ServicePayment: React.FC = () => {
  const [service, setService] = useState<Service>('mobile')
  const [amount, setAmount] = useState('')

  const handlePayment = () => {
    // Implement payment logic here
    console.log(`Paying ${amount} for ${service} service`)
  }

  return (
    <Card className="shadow-lg">
      <CardHeader className="bg-primary/5">
        <CardTitle className="text-primary flex items-center">
          <CreditCard className="mr-2" />
          Service Payment
        </CardTitle>
        <CardDescription>Pay for mobile and public services</CardDescription>
      </CardHeader>
      <CardContent>
        <form onSubmit={(e) => { e.preventDefault(); handlePayment(); }}>
          <div className="grid w-full items-center gap-4">
            <div className="flex flex-col space-y-1.5">
              <Label htmlFor="service">Service</Label>
              <Select value={service} onValueChange={(value) => setService(value as Service)}>
                <SelectTrigger id="service">
                  <SelectValue placeholder="Select service" />
                </SelectTrigger>
                <SelectContent position="popper">
                  <SelectItem value="mobile">Mobile Phone</SelectItem>
                  <SelectItem value="electricity">Electricity</SelectItem>
                  <SelectItem value="water">Water</SelectItem>
                  <SelectItem value="internet">Internet</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <div className="flex flex-col space-y-1.5">
              <Label htmlFor="amount">Amount</Label>
              <Input
                id="amount"
                placeholder="Enter amount"
                type="text"
                inputMode="numeric"
                pattern="[0-9]*"
                value={amount}
                onChange={(e) => {
                  const numericValue = e.target.value.replace(/[^0-9]/g, '');
                  setAmount(numericValue);
                }}
              />
            </div>
            <Button type="submit" className="w-full">Pay</Button>
          </div>
        </form>
      </CardContent>
    </Card>
  )
}

export default function Component() {
  return (
    <div className="min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 dark:from-gray-900 dark:to-gray-800">
      <div className="container mx-auto p-4">
        <h1 className="text-4xl font-bold mb-6 text-center text-primary">E-Wallet Dashboard</h1>
        <div className="grid gap-6 md:grid-cols-2">
          <Card className="shadow-lg">
            <CardHeader className="bg-primary/5">
              <CardTitle className="text-primary flex items-center">
                <Wallet className="mr-2" />
                Wallet Balance
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-4xl font-bold text-primary">$1,250.00</div>
            </CardContent>
          </Card>
          <ServicePayment />
        </div>
        <Tabs defaultValue="clients" className="mt-6">
          <TabsList className="w-full">
            <TabsTrigger value="clients" className="w-1/2">Clients</TabsTrigger>
            <TabsTrigger value="transactions" className="w-1/2">Transactions</TabsTrigger>
          </TabsList>
          <TabsContent value="clients">
            <ClientManagement />
          </TabsContent>
          <TabsContent value="transactions">
            <TransactionHistory />
          </TabsContent>
        </Tabs>
      </div>
    </div>
  )
}
